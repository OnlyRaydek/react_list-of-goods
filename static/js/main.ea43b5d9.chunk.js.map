{"version":3,"sources":["components/Buttons/Buttons.js","components/ListOfGoods/ListOfGoods.js","App.js","index.js"],"names":["Buttons","React","memo","props","clickReverse","clickSortAlphabetically","clickSortByLength","clickReset","type","onClick","ListOfGoods","items","map","item","key","goodsFromServer","App","state","newList","showButton","sortAlphabeticallyIncrease","sortByLength","startList","setState","reverse","sortAlphabetically","sortedList","sort","a","b","localeCompare","length","reset","className","this","Component","ReactDOM","render","document","getElementById"],"mappings":"6NAmDeA,G,MAhDCC,IAAMC,MAAK,SAACC,GAAW,IAEnCC,EAIED,EAJFC,aACAC,EAGEF,EAHFE,wBACAC,EAEEH,EAFFG,kBACAC,EACEJ,EADFI,WAGF,OACE,oCACE,4BACEC,KAAK,SACLC,QAASL,GAFX,WAOA,4BACEI,KAAK,SACLC,QAASJ,GAFX,uBAOA,4BACEG,KAAK,SACLC,QAASH,GAFX,kBAOA,4BACEE,KAAK,SACLC,QAASF,GAFX,cCfSG,EAhBK,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAClB,oCACE,4BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,wBAAIC,IAAKD,GACNA,SCFLE,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAgGaC,E,4MA5FbC,MAAQ,CACNC,QAAS,GACTC,YAAY,EACZC,4BAA4B,EAC5BC,cAAc,G,EAGhBC,UAAY,WACV,EAAKC,UAAS,SAAAN,GAAK,MAAK,CACtBC,QAAQ,GAAD,OAAMH,GACbI,YAAY,O,EAIhBK,QAAU,WACR,EAAKD,UAAS,SAAAN,GAAK,MAAK,CACtBC,QAASD,EAAMC,QAAQM,e,EAI3BC,mBAAqB,WAAO,IAAD,EACuB,EAAKR,MAA7CG,EADiB,EACjBA,2BAEFM,EAHmB,EACWR,QAETS,MAAK,SAACC,EAAGC,GAClC,OAAIT,EACKQ,EAAEE,cAAcD,GAGlBA,EAAEC,cAAcF,MAGzB,EAAKL,SAAS,CACZL,QAASQ,EACTN,4BAA6BA,K,EAIjCC,aAAe,WAAO,IAAD,EACe,EAAKJ,MAA/BI,EADW,EACXA,aAEFK,EAHa,EACGR,QAEKS,MAAK,SAACC,EAAGC,GAClC,OAAIR,EACKO,EAAEG,OAASF,EAAEE,OAGfF,EAAEE,OAASH,EAAEG,UAGtB,EAAKR,SAAS,CACZL,QAASQ,EACTL,cAAeA,K,EAInBW,MAAQ,WACN,EAAKT,SAAS,CACZL,QAAQ,GAAD,OAAMH,M,uDAKf,OACE,yBAAKkB,UAAU,OACb,qCACCC,KAAKjB,MAAME,WAER,4BACEX,KAAK,SACLC,QAASyB,KAAKZ,WAFhB,SAQA,6BACE,kBAAC,EAAD,CACElB,aAAc8B,KAAKV,QACnBnB,wBAAyB6B,KAAKT,mBAC9BnB,kBAAmB4B,KAAKb,aACxBd,WAAY2B,KAAKF,QAEnB,kBAAC,EAAD,CACErB,MAAOuB,KAAKjB,MAAMC,gB,GAnFhBjB,IAAMkC,WCfxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.ea43b5d9.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Buttons = React.memo((props) => {\n  const {\n    clickReverse,\n    clickSortAlphabetically,\n    clickSortByLength,\n    clickReset,\n  } = props;\n\n  return (\n    <>\n      <button\n        type=\"button\"\n        onClick={clickReverse}\n      >\n        Reverse\n      </button>\n\n      <button\n        type=\"button\"\n        onClick={clickSortAlphabetically}\n      >\n        Sort alphabetically\n      </button>\n\n      <button\n        type=\"button\"\n        onClick={clickSortByLength}\n      >\n        Sort by length\n      </button>\n\n      <button\n        type=\"button\"\n        onClick={clickReset}\n      >\n        Reset\n      </button>\n    </>\n  );\n});\n\nButtons.propTypes = {\n  clickReverse: PropTypes.func.isRequired,\n  clickSortAlphabetically: PropTypes.func.isRequired,\n  clickSortByLength: PropTypes.func.isRequired,\n  clickReset: PropTypes.func.isRequired,\n};\n\nexport default Buttons;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ListOfGoods = ({ items }) => (\n  <>\n    <ul>\n      {items.map(item => (\n        <li key={item}>\n          {item}\n        </li>\n      ))}\n    </ul>\n  </>\n);\n\nListOfGoods.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default ListOfGoods;\n","import React from 'react';\nimport './App.css';\n\nimport Buttons from './components/Buttons/Buttons';\nimport ListOfGoods from './components/ListOfGoods/ListOfGoods';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    newList: [],\n    showButton: true,\n    sortAlphabeticallyIncrease: true,\n    sortByLength: true,\n  }\n\n  startList = () => {\n    this.setState(state => ({\n      newList: [...goodsFromServer],\n      showButton: false,\n    }));\n  }\n\n  reverse = () => {\n    this.setState(state => ({\n      newList: state.newList.reverse(),\n    }));\n  };\n\n  sortAlphabetically = () => {\n    const { sortAlphabeticallyIncrease, newList } = this.state;\n\n    const sortedList = newList.sort((a, b) => {\n      if (sortAlphabeticallyIncrease) {\n        return a.localeCompare(b);\n      }\n\n      return b.localeCompare(a);\n    });\n\n    this.setState({\n      newList: sortedList,\n      sortAlphabeticallyIncrease: !sortAlphabeticallyIncrease,\n    });\n  };\n\n  sortByLength = () => {\n    const { sortByLength, newList } = this.state;\n\n    const sortedList = newList.sort((a, b) => {\n      if (sortByLength) {\n        return a.length - b.length;\n      }\n\n      return b.length - a.length;\n    });\n\n    this.setState({\n      newList: sortedList,\n      sortByLength: !sortByLength,\n    });\n  };\n\n  reset = () => {\n    this.setState({\n      newList: [...goodsFromServer],\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n        {this.state.showButton\n          ? (\n            <button\n              type=\"button\"\n              onClick={this.startList}\n            >\n              Start\n            </button>\n          )\n          : (\n            <div>\n              <Buttons\n                clickReverse={this.reverse}\n                clickSortAlphabetically={this.sortAlphabetically}\n                clickSortByLength={this.sortByLength}\n                clickReset={this.reset}\n              />\n              <ListOfGoods\n                items={this.state.newList}\n              />\n            </div>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}